
"
\
\/\/
\{
\}
8ba
_a
RND
RND
char
_akha
_akhoaja
SEGMENT
IF
\#IF
IF1
IF2
GOTO
_aghoaxi_ta
\#undef
_acha
unsigned
good
static
ATN
SUB
XOR
_along
INFINITY
XLAT
CALL
RIGHT
final
finally
ELSE
ELSE
\#ELSE
BSF
RECORD
_ama
INSB
INSW
SHELL
instanceof
instanceof_nna

C break;

_awai_dha
OCT
OCTka
_asa_ta
_aABS
abs
_asa_m_darbha
transient
_aCONST
INT
RIGHT
RTRIM
RIGHTra
RIGHTrabhoo_ta
finalize
IN
INSTR
_aa_dhaara
_aaOR_ta
DIM
run
\#pragma
OCT
BP
END
ASC
HIGH
HIGHVAL
raise
_upaSTRING
util
_upalab_dha
SUBTTL
init
_ri_nna
_aisaa
_aisee
AND
awt
AH
AX
CS
kathoara
Thread
AL
LE
LT
DO
struct
kuchha
koota
java
XOR
COS
koa_ee
package
FOR
FOR_a
FORaga_ta
NEXT
FUNCTION
FUNCTION\
qsort
tmpnam
kxu_dra
kxae_tra
kxae_tra\
kha
\\v
BH
BX
BL
eof
khaprawaa_ha\
FILE
FILErename
FILEEND
SPACE
public
khae_da
khoaja
khoajapa
OPEN
SEG
ga
CH
CX
GS
AAM
ga_rdhoa
Math
Math\
STEP
CL
gala_ta
MUL
DH
SBB
DX
SUB
AAS
TIMER
RCR
RCL
ROR
DL
ROL
pow
DECLARE
\#DECLARE
ghoaxi_ta
cha
\\a
switch
operator
chi_tra
Graphics
SGN
signed
SGN
WIDTH
chou_tha
Image
ARPL
chhaapa
PrintWriter
trunc
chhoataa
LCASE
pause
AAA
STATIC
ADC
WHILE
WHILE
jamata
ADD
GT
GOSUB

C continue;

TEST
jeewi_ta
union
\%union
unionna
joa_rdoa
jha_mdae
\\t
tika
REM
REM
TAN
theeka
MOVSX
MOVZX
daaget
daagetmaba
daagetmasha
dec
dausa\
DOSSEG
SI
SS
SP
template
STACK

DS
DQ
_ta_thya
_ta_thya\?
DD
DF
WEND
args
DW
LOCK
_truti
\#error
_truti1
_truti2
_trutisa_m\
_da
FS
DAS
DAA
DT
DTaOR
_dasa
CDQ
right
\%right
_dikhaa_oa
Date
DATE
long
offsetof
ERANGE
FAR
FAR_ta_thya
FAR_ta_thya\?
_d_ri_rdhafgett
put
putjha
putjha_da
putsa
putsa_da
LOOP
_dwaa
boolean
_dwi
binary
double
_dhwani
na
\\n
clone
clonena
MASK
NEG
APPEND
DEC
NE
naOR
IP
NOT
LENGTH
rename
NEAR
nikaget
EXIT SUB
EXIT SUBka
private
niasm_nna
niraa_dhaara
niwaesha
assert
assert\
net
LOW
LOWVAL
pa
\\f
catch
IMUL
pattaio\
read
io
io\
ios
ioprawaa_ha
ioprawaa_ha\
BSR
IDIV
SCASB
SCASW
para
SCREEN
parOR
INPUT
INPUTka
abort
REP
REPNE
REPNZ
REPE
REPZ
INPUT
\%term
END
\#END
CINT
LEFT
LTRIM
LEFTja
EXISTS
PAGE
LINE
\#line
tm
AS
pra
typedef
\%typedef
typedef\
system
pra_ti
EXP
replace
ENTRY
praORsa
applet
prawaa_ha
ENTER
pras_tu_ta
praa_thamika
praa_thamika\
praa_thamika_taa
\%prec
LOOP
LOOPNE
LOOPnasha
LOOPEQ
LOOPsha
phae_mka_taa
phae_mALe
throw
ba
EBP
EAX
ES
EBX
ECX
EDX
XADD
BTR
BTS
BTC
baGOSUB
uppercase
UCASE
ESI
ba
ba_taa_oa
ba_dala
ba_dalee
ba_daget
EIP
paint
bapha
baphara
bama
OUTSB
OUTSW
EQ
equals
CBW
ba_hu
BYTE
byte
baakee
times
out
extern
left
\%left
bita
BT
PSET
PSET
MID
bad
b_ri_ha_ta
baeFOR
\%baejoin
CLOSE
bha
LAR
LAHF
bhakha
LTR
LSL
LGS
fgett
fgett\
LEA
LSS
LDS
LFS
LES
bhabapha
bhama
LODSB
LODSW
CMPSB
CMPSW
LMSW
bharaa
bharoa
virtual
LIDT
bhawOR
LLDT
div
div\
AAD
compareTo
compareTona
ma
\\b
ma_ta
maprawaa_ha
maprawaa_ha\
super
VAL
VALka
VALkapackage\
VALkaDECLARE\
VALkaargs\
VALkaio
VALkaio\
LET
LEN
STRING
STRING\
delete
friend
mila
ALIGN
free
main
SQR
SQRpra_nna\
join
mae_m
LABEL
\%token
this
OR
\#OR
OR_m_trika
yoajaka
asm
SETO
SETA
SETAE
SETL
SAHF
SETLE
STR
protected
STOSB
STOSW

SETS
SETSnaa-_truti
SETG
raWHILE
STC
STD
SETB
SETNO
SETNA
SETNAE
SETNL
SETNLE
SETNS
SETNG
SETBWHILE
SETNB
SETNBE
SETBE
SETNP
SETNZ
SETNE
SETE
SETP
SETPO
SETPE
SMSW
SETZ
wait
LINE
register
roakoa
COLOR
\\r
JO
JA
JAE
JL
JLE
JCXZ
short
JS
JG
laWHILE
JB
JNO
JNA
JNAE
JNL
JNLE
JNS
JNG
JBWHILE
JNB
JNBE
JNE
JNP
JNZ
JBE
JE
JECXZ
JP
JPO
JPE
JZ
implements
INC
laayaka
JMP
PRINT
\%PRINT
CHR
Writer
OUTPUT
LOG
get
getjha
getjha_da
getsa
getsa_da
wa
NOP
CMC
CLI
warga
SQR
IRET
STI
URL
Object
RETF
RETURN
INT
INT3
INTO
fork
stop
WAIT
wishaala
CIRCLE
scientific
wORka
wORkhOR
wyoo_ha
void
sha
WORD
CWD
shishu
TITLE
shuru
rewind
start
\%start
NULL
MOD
class
\\x
HEX
HEX
sa
CLTS
saFUNCTION
saGOSUB
sateeka
CLC
sa_ta
CLD
VERRW
saphala
clear
flush
saba
ABS
ABS
ABSprawaa_ha
\%ABSprawaa_ha
TIME
TIME\
TIMER
ABSJMP\
ABSapackage
END
ABSawaesha
\#ABSawaesha
GROUP
samban_dha
VERR
SIN
COMM
CLS
saamaanya
abstract
SHARED
saa_nachaa
BOUND
BOUND\
PURGE
surakxaa
calloc
PTR
indexOf
DIR
DIR\
TO
soa
sa_m
sa_mka
signal
signal\
sa_m_darbha
sa_m_daesha
concat
sa_mshoa_dhana
suspend
s_thaa
LOCATE
LOCAL
s_thi_ti
s_thi_ti\
CONST
sm_ri_ti
sm_ri_ti\
auto
interface
SAR
SAL
remove
SHR
SHRD
SHL
SHLD
fail
case
FOR
THEN
THENsha
THEN
exec
while
_aABSkaaleeka
pass
_u_mtae
is
_duru
_aemeenot
not
kaani_di
kaJIPagi_mchu
for
assert
finally
except
false
_taraSTEP
return
_taJlagi_mchu

yield
import
true
def
from
paF_mchu
global
try
and
print
lae_daa
get
break
waerae
as
s_thaanika_m
